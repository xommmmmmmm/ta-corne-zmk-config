/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R      &kp T          &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D         &kp F      &kp G          &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V      &kp B          &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                         &kp LEFT_ALT  &kp LCTRL  &lt 1 SPACE    &lt 2 ENTER  &mo 3  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp GRAVE  &kp N1        &kp N2        &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans     &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp DEL
&trans     &kp LS(PIPE)  &kp LS(LBRC)  &kp LS(RBRC)   &kp LS(PLUS)  &kp LS(UNDER)    &kp MINUS      &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH      &trans
                                       &trans         &trans        &trans           &trans         &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
&kp ESC  &trans        &kp LG(UP)    &trans         &kp HOME  &kp PG_UP    &kp N7  &kp N8  &kp N9  &kp FSLH  &kp STAR   &trans
&trans   &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(RIGHT)  &kp END   &kp PG_DN    &kp N4  &kp N5  &kp N6  &kp N0    &kp MINUS  &kp COMMA
&trans   &trans        &trans        &trans         &trans    &trans       &kp N1  &kp N2  &kp N3  &kp DOT   &kp PLUS   &trans
                                     &trans         &trans    &trans       &trans  &trans  &trans
            >;

            label = "Raise";
        };

        nav_layer {
            bindings = <
&trans    &kp F1  &kp F2   &kp F3   &kp F4   &trans             &trans      &trans      &kp INS       &kp SCROLLLOCK  &kp PRINTSCREEN  &kp DEL
&trans    &kp F5  &kp F6   &kp F7   &kp F8   &trans             &trans      &kp LEFT    &kp UP        &kp DOWN        &kp RIGHT        &trans
&kp CAPS  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAUSE_BREAK    &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP    &kp C_MUTE       &kp C_PP
                           &trans   &trans   &trans             &trans      &trans      &trans
            >;

            label = "Nav";
        };

        adjust_layer {
            bindings = <
&studio_unlock  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR
&trans          &trans        &trans        &trans        &trans        &trans          &trans         &trans         &trans         &trans         &trans         &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans         &trans         &trans         &trans         &trans         &soft_off
                                            &trans        &trans        &trans          &trans         &sys_reset     &trans
            >;

            label = "Adjust";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
